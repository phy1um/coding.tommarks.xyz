================
      2024-11-13
================

----------------------
ps2 game: SIDESCROLLER
----------------------
+ load decorations from LDTK
  - LDTK kind of forces us to define an entity class for each decoration,
    and a tileset for each image we use. this is ok, just cumbersome 
+ load many maps per .ps2lvl according to LDTK "layers". use interfaces for
  draw and collision test.
+ LDTK will include every layer in every level, so add a check for "empty"
  tile layers
  - make sure we check if a layer is non-empty before including its assets in that
    level!!
+ hot reload all levels with context method, even on hardware
  - this is really cool :D

this is coming together more, it would be nice to have real art...


================
      2024-11-12
================

(includes work from 2024-11-11)

----------------------
ps2 game: SIDESCROLLER
----------------------
+ Load "trigger areas" from LDTK
  - these areas do things eg load another level when the player
    in inside
  - level load triggers need to check if the desired level is already loaded!
+ better active level tracking/inactive level recycling based on player position
+ levels calculate bounds from tilemaps, used for active/inactive
  ! player could be in many levels at once!
! game freezes when too many tiles on screen :o

================
      2024-11-10
================

----------------------
ps2 game: SIDESCROLLER
----------------------
* word-align level allocator to fix bad writes
+ compile LDTK file into .ps2lvl files
  + read LDTK tilemap paths for resources needed in level
  + use world positon of individual levels
- next steps:
  1. a task system (for async io to avoid stalls)
  2. an event passing system (decouple some function calls/timings).
     this will enable reloading assets more effectively!
  3. entity/decoration system, more complex asset loading

--------
p2garage
--------
* check texture sizes before uploading to resolve divide by 0

================
      2024-11-09
================

oh man doing this regularly is hard apparently :D

here is a bit of a stopgap update to fill in since the previous entry, not all
of this was one day...

----------------------
ps2 game: SIDESCROLLER
----------------------
* fixed framebuffer sizes. interlaced signals still need a fullsize (eg 640*448)
  framebuffer! this is different to what i expected from how interlacing works.
  refraction says i should still double buffer to avoid tearing, so maybe
  supporting 480p DTV is worthwhile too.
+ added "WAD" files, which are inspired by the index that Kingdom Hearts uses
  for looking up the block that files reside in on a disk. I am using this
  over the network for now but i would like it to support disks too.
  i would like to promote this to the P2GARAGE library one day.
+ added IO apis to wrap WAD. maybe i actually don't want to load from a WAD
  sometimes, if i'm doing lots of hot reloading. but i suspect it will perform
  better over the network (ps2client) even though this is anecdotal for now
+ added a Linux build, so that i can run it in valgrind and find memory issues
* fixed many memory issues :D
+ added a binary level file format, and a tool to build that format from JSON.
  next step is exporting JSON from the LDTK editor and adapting the scripts to that.
! the game crashes on hardware (but not emulator or simulator) due to bad VADDR ~= 0x173700.
  this addr comes right from `callloc()` so i have no idea what is going on there, it feels
  like where calloc should be putting things :(

--------
simpleVM
--------
* finished the big register optimization refactor 
+ PC no longer a normal register, new Jump/Branch instructions.
  this reclaims a whole register, now named "D". 
+ build lang for WASM with compiler bindings

